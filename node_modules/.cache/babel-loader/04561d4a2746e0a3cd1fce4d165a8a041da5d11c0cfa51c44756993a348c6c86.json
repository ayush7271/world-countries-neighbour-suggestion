{"ast":null,"code":"var _jsxFileName = \"/home/ayush/Desktop/cl/world-countries-neighbour-suggestion/src/Worldmap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldMap = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [countriesWithBoundaries, setCountriesWithBoundaries] = useState([]);\n  const [countriesWithoutBoundaries, setCountriesWithoutBoundaries] = useState([]);\n  const [tooltip, setTooltip] = useState(\"\");\n  useEffect(() => {\n    // Fetch country data from the API\n    fetch(\"https://restcountries.com/v3.1/all\").then(response => response.json()).then(data => {\n      // Sort the countries alphabetically by their names\n      const sortedCountries = data.sort((a, b) => a.name.common.localeCompare(b.name.common));\n      setCountries(sortedCountries);\n\n      // Filter countries based on the presence of neighboring country codes\n      const countriesWithBoundaries = sortedCountries.filter(country => country.borders && country.borders.length > 0);\n      const countriesWithoutBoundaries = sortedCountries.filter(country => !country.borders || country.borders.length === 0);\n      setCountriesWithBoundaries(countriesWithBoundaries);\n      setCountriesWithoutBoundaries(countriesWithoutBoundaries);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  const handleCountryHover = neighbours => {\n    setTooltip(neighbours === null || neighbours === void 0 ? void 0 : neighbours.join(\", \"));\n  };\n  const handleCountryLeave = () => {\n    setTooltip(\"\");\n  };\n  console.log(countriesWithBoundaries, countriesWithoutBoundaries);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Countries with Boundaries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: countriesWithBoundaries.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n          onMouseEnter: () => handleCountryHover(country.borders),\n          onMouseLeave: handleCountryLeave,\n          children: country.name.common\n        }, country.name.common, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Countries without Boundaries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: countriesWithoutBoundaries.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: country.name.common\n        }, country.name.common, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), tooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      children: tooltip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldMap, \"HZipRA7VcROqjlCYeU4zNnaeqAQ=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WorldMap","_s","countries","setCountries","countriesWithBoundaries","setCountriesWithBoundaries","countriesWithoutBoundaries","setCountriesWithoutBoundaries","tooltip","setTooltip","fetch","then","response","json","data","sortedCountries","sort","a","b","name","common","localeCompare","filter","country","borders","length","catch","error","console","handleCountryHover","neighbours","join","handleCountryLeave","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onMouseEnter","onMouseLeave","_c","$RefreshReg$"],"sources":["/home/ayush/Desktop/cl/world-countries-neighbour-suggestion/src/Worldmap.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst WorldMap = () => {\n  const [countries, setCountries] = useState([]);\n  const [countriesWithBoundaries, setCountriesWithBoundaries] = useState([]);\n  const [countriesWithoutBoundaries, setCountriesWithoutBoundaries] = useState([]);\n  const [tooltip, setTooltip] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch country data from the API\n    fetch(\"https://restcountries.com/v3.1/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        // Sort the countries alphabetically by their names\n        const sortedCountries = data.sort((a, b) =>\n          a.name.common.localeCompare(b.name.common)\n        );\n        setCountries(sortedCountries);\n\n        // Filter countries based on the presence of neighboring country codes\n        const countriesWithBoundaries = sortedCountries.filter(\n          (country) => country.borders && country.borders.length > 0\n        );\n        const countriesWithoutBoundaries = sortedCountries.filter(\n          (country) => !country.borders || country.borders.length === 0\n        );\n\n        setCountriesWithBoundaries(countriesWithBoundaries);\n        setCountriesWithoutBoundaries(countriesWithoutBoundaries);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  const handleCountryHover = (neighbours) => {\n    setTooltip(neighbours?.join(\", \"));\n  };\n\n  const handleCountryLeave = () => {\n    setTooltip(\"\");\n  };\nconsole.log(countriesWithBoundaries,countriesWithoutBoundaries)\n  return (\n    <div className=\"App\">\n      <div>\n        <h2>Countries with Boundaries</h2>\n        <ul>\n          {countriesWithBoundaries.map((country) => (\n            <li\n              key={country.name.common}\n              onMouseEnter={() => handleCountryHover(country.borders)}\n              onMouseLeave={handleCountryLeave}\n            >\n              {country.name.common}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <h2>Countries without Boundaries</h2>\n        <ul>\n          {countriesWithoutBoundaries.map((country) => (\n            <li key={country.name.common}>{country.name.common}</li>\n          ))}\n        </ul>\n      </div>\n      {tooltip && <div className=\"tooltip\">{tooltip}</div>}\n    </div>\n  );\n};\n\nexport default WorldMap;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1E,MAAM,CAACU,0BAA0B,EAAEC,6BAA6B,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChF,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACAa,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd;MACA,MAAMC,eAAe,GAAGD,IAAI,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACrCD,CAAC,CAACE,IAAI,CAACC,MAAM,CAACC,aAAa,CAACH,CAAC,CAACC,IAAI,CAACC,MAAM,CAC3C,CAAC;MACDjB,YAAY,CAACY,eAAe,CAAC;;MAE7B;MACA,MAAMX,uBAAuB,GAAGW,eAAe,CAACO,MAAM,CACnDC,OAAO,IAAKA,OAAO,CAACC,OAAO,IAAID,OAAO,CAACC,OAAO,CAACC,MAAM,GAAG,CAC3D,CAAC;MACD,MAAMnB,0BAA0B,GAAGS,eAAe,CAACO,MAAM,CACtDC,OAAO,IAAK,CAACA,OAAO,CAACC,OAAO,IAAID,OAAO,CAACC,OAAO,CAACC,MAAM,KAAK,CAC9D,CAAC;MAEDpB,0BAA0B,CAACD,uBAAuB,CAAC;MACnDG,6BAA6B,CAACD,0BAA0B,CAAC;IAC3D,CAAC,CAAC,CACDoB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,kBAAkB,GAAIC,UAAU,IAAK;IACzCrB,UAAU,CAACqB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEC,IAAI,CAAC,IAAI,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BvB,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EACHmB,OAAO,CAACK,GAAG,CAAC7B,uBAAuB,EAACE,0BAA0B,CAAC;EAC7D,oBACEP,OAAA;IAAKmC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpC,OAAA;MAAAoC,QAAA,gBACEpC,OAAA;QAAAoC,QAAA,EAAI;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClCxC,OAAA;QAAAoC,QAAA,EACG/B,uBAAuB,CAACoC,GAAG,CAAEjB,OAAO,iBACnCxB,OAAA;UAEE0C,YAAY,EAAEA,CAAA,KAAMZ,kBAAkB,CAACN,OAAO,CAACC,OAAO,CAAE;UACxDkB,YAAY,EAAEV,kBAAmB;UAAAG,QAAA,EAEhCZ,OAAO,CAACJ,IAAI,CAACC;QAAM,GAJfG,OAAO,CAACJ,IAAI,CAACC,MAAM;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKtB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNxC,OAAA;MAAAoC,QAAA,gBACEpC,OAAA;QAAAoC,QAAA,EAAI;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCxC,OAAA;QAAAoC,QAAA,EACG7B,0BAA0B,CAACkC,GAAG,CAAEjB,OAAO,iBACtCxB,OAAA;UAAAoC,QAAA,EAA+BZ,OAAO,CAACJ,IAAI,CAACC;QAAM,GAAzCG,OAAO,CAACJ,IAAI,CAACC,MAAM;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA2B,CACxD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACL/B,OAAO,iBAAIT,OAAA;MAAKmC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAE3B;IAAO;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAACtC,EAAA,CApEID,QAAQ;AAAA2C,EAAA,GAAR3C,QAAQ;AAsEd,eAAeA,QAAQ;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}